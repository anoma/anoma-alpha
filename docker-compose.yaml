version: '2.1'

networks:
  anoma_test_net:
    ipam:
      driver: default
      config:
        - subnet: 172.29.1.0/24

# Anoma prototype topology configuration
#
# Validator 1 is used as a p2p bootstrap node by all other members of the p2p network
# and all nodes depend on having validator 1 up an running first to make sure that they
# are able to join the network.

services:

  metrics:
    image: prom/prometheus
    volumes:
      - "./test/prometheus.yaml:/etc/prometheus/prometheus.yml"
    networks:
      anoma_test_net:
        ipv4_address: 172.29.1.3

  grafana:
    image: grafana/grafana-oss
    ports:
      - "10000:3000"
    volumes:
      - "./test/grafana-prometheus.yaml:/etc/grafana/provisioning/datasources/datasource.yaml"
      - "./test/grafana.ini:/etc/grafana/grafana.ini"
      - "./test/grafana-p2p.json:/var/lib/grafana/dashboards/grafana-p2p.json"
    environment:
      GF_PATHS_CONFIG: "/etc/grafana/grafana.ini"
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/grafana-p2p.json"
    networks:
      anoma_test_net:
        ipv4_address: 172.29.1.4
    depends_on:
      metrics:
        condition: service_started

  # Member of the validator set and p2p bootstrap node
  validator_1:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - RUST_BACKTRACE=1
    command: ./anoma --secret noop --genesis genesis.json
    networks:
      anoma_test_net:
        ipv4_address: 172.29.1.2
    depends_on:
      grafana:
        condition: service_started

    healthcheck:
      test: "exit 0"
      interval: 1s
      start_period: 3s

  

  # Member of the validator set with RPC interface enabled and exposed on 8081
  validator_2:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - RUST_BACKTRACE=1
    command: ./anoma --secret noop --genesis genesis.json --peer 172.29.1.2:44668 --rpc 8080
    networks:
      anoma_test_net:
    ports:
      - "8081:8080"
    depends_on:
      validator_1:
        condition: service_healthy

  # generic validator with no extra roles
  validator_n:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - RUST_BACKTRACE=1
    command: ./anoma --secret noop --genesis genesis.json --peer 172.29.1.2:44668
    networks:
      anoma_test_net:
    depends_on:
      validator_1:
        condition: service_healthy

  # Solver instance that submits complete transactions
  solver_n:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - RUST_BACKTRACE=1
    command: ./solver --secret noop --genesis genesis.json --peer 172.29.1.2:44668
    networks:
      anoma_test_net:
    depends_on:
      validator_1:
        condition: service_healthy